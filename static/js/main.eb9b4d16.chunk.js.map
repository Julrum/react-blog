{"version":3,"sources":["pages/About/index.tsx","pages/About/About.tsx","components/TodoTemplate/TodoTemplate.style.ts","components/TodoTemplate/index.tsx","components/TodoTemplate/TodoTemplate.tsx","components/TodoInsert/TodoInsert.style.ts","components/TodoInsert/index.tsx","components/TodoInsert/TodoInsert.tsx","components/TodoList/TodoList.style.ts","components/TodoListItem/TodoListItem.style.ts","components/TodoListItem/index.tsx","components/TodoListItem/TodoListItem.tsx","components/TodoList/index.tsx","components/TodoList/TodoList.tsx","components/Todos/index.tsx","components/Todos/Todos.tsx","pages/Home/index.tsx","pages/Home/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["About","StyledTodoTemplate","styled","div","AppTitle","Content","TodoTemplate","children","StyledTodoInsert","form","StyledInput","input","StyledButton","button","TodoInsert","onInsert","useState","value","setValue","onChange","useCallback","e","target","onSubmit","preventDefault","placeholder","type","StyledTodoList","StyledTodoListItem","Checkbox","props","checked","css","Text","Remove","TodoListItem","todo","onRemove","onToggle","id","text","onClick","TodoList","todos","map","Todos","setTodos","nextId","useRef","current","concat","filter","Home","App","to","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eb9b4d16.chunk.js","sourcesContent":["import About from './About';\n\nexport default About;\n","import React from 'react';\nimport { AboutProps } from './About.type';\n\n// eslint-disable-next-line\nconst About: React.FC<AboutProps> = ({}) => {\n  return (\n    <div>\n      <h1>소개</h1>\n      <p>이 프로젝트는 리액트 라우터 기초를 실습해 보는 예제 프로젝트입니다.</p>\n    </div>\n  );\n};\n\nexport default About;\n","import styled from 'styled-components';\n\nexport const StyledTodoTemplate = styled.div`\n  width: 512px;\n  // width가 주어진 상태에서 좌우 중앙 정렬\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 6rem;\n  border-radius: 4px;\n  overflow: hidden;\n`;\n\nexport const AppTitle = styled.div`\n  background: #22b8cf;\n  color: white;\n  height: 4rem;\n  font-size: 1.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Content = styled.div`\n  background: white;\n`;\n","import TodoTemplate from './TodoTemplate';\n\nexport default TodoTemplate;\n","import React from 'react';\nimport { TodoTemplateProps } from './TodoTemplate.type';\nimport { StyledTodoTemplate, AppTitle, Content } from './TodoTemplate.style';\n\nconst TodoTemplate: React.FC<TodoTemplateProps> = ({ children }) => {\n  return (\n    <StyledTodoTemplate>\n      <AppTitle>일정 관리</AppTitle>\n      <Content>{children}</Content>\n    </StyledTodoTemplate>\n  );\n};\n\nexport default TodoTemplate;\n","import styled from 'styled-components';\n\nexport const StyledTodoInsert = styled.form`\n  display: flex;\n  background: #495057;\n`;\n\nexport const StyledInput = styled.input`\n  // 기본 스타일 초기화\n  background: none;\n  outline: none;\n  border: none;\n  padding: 0.5rem;\n  font-size: 1.125rem;\n  line-height: 1.5;\n  color: white;\n\n  &::placeholder {\n    color: #dee2e6;\n  }\n  // 버튼을 제외한 영역을 모두 차지하기\n  flex: 1;\n`;\n\nexport const StyledButton = styled.button`\n  // 기본 스타일 초기화\n  background: none;\n  outline: none;\n  border: none;\n  background: #868e96;\n  color: white;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  font-size: 1.5rem;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  transition: 0.1s background ease-in;\n  &:hover {\n    background: #adb5db;\n  }\n`;\n","import TodoInsert from './TodoInsert';\n\nexport default TodoInsert;\n","import React, { useState, useCallback } from 'react';\nimport { MdAdd } from 'react-icons/md';\n\nimport { TodoInsertProps } from './TodoInsert.type';\nimport {\n  StyledButton,\n  StyledInput,\n  StyledTodoInsert,\n} from './TodoInsert.style';\n\nconst TodoInsert: React.FC<TodoInsertProps> = ({ onInsert }) => {\n  const [value, setValue] = useState('');\n\n  const onChange = useCallback((e) => {\n    setValue(e.target.value);\n  }, []);\n\n  const onSubmit = useCallback(\n    (e) => {\n      onInsert(value);\n      setValue('');\n      e.preventDefault();\n    },\n    [onInsert, value],\n  );\n\n  return (\n    <StyledTodoInsert onSubmit={onSubmit}>\n      <StyledInput\n        placeholder=\"할 일을 입력하세요\"\n        value={value}\n        onChange={onChange}\n      />\n      <StyledButton type=\"submit\">\n        <MdAdd />\n      </StyledButton>\n    </StyledTodoInsert>\n  );\n};\n\nexport default TodoInsert;\n","import styled from 'styled-components';\n\nexport const StyledTodoList = styled.div`\n  min-height: 320px;\n  max-height: 513px;\n  overflow-y: auto;\n`;\n","import styled, { css } from 'styled-components';\n\nexport const StyledTodoListItem = styled.div`\n  padding: 1rem;\n  display: flex;\n  align-items: center;\n  &:nth-child(even) {\n    background: #f8f9fa;\n  }\n  & + & {\n    border-top: 1px solid #dee2e6;\n  }\n`;\n\nexport interface CheckProps {\n  checked?: boolean;\n}\n\nexport const Checkbox = styled.div<CheckProps>`\n  cursor: pointer;\n  flex: 1;\n  display: flex;\n  align-items: center;\n  svg {\n    font-size: 1.5rem;\n  }\n\n  ${(props) =>\n    props.checked &&\n    css`\n      svg {\n        color: #22b8cf;\n      }\n    `}\n`;\n\nexport const Text = styled.div<CheckProps>`\n  margin-left: 0.5rem;\n  flex: 1;\n\n  ${({ checked }) =>\n    checked &&\n    css`\n      color: #adb5db;\n      text-decoration: line-through;\n    `}\n`;\n\nexport const Remove = styled.div`\n  display: flex;\n  align-items: 1.5rem;\n  color: #ff6b6b;\n  cursor: pointer;\n  &:hover {\n    color: #ff8787;\n  }\n`;\n","import TodoListItem from './TodoListItem';\n\nexport default TodoListItem;\n","import React from 'react';\nimport {\n  MdCheckBoxOutlineBlank,\n  MdCheckBox,\n  MdRemoveCircleOutline,\n} from 'react-icons/md';\nimport { TodoListItemProps } from './TodoListItem.type';\nimport {\n  StyledTodoListItem,\n  Checkbox,\n  Text,\n  Remove,\n} from './TodoListItem.style';\n\nconst TodoListItem: React.FC<TodoListItemProps> = ({\n  todo,\n  onRemove,\n  onToggle,\n}) => {\n  const { id, text, checked } = todo;\n\n  return (\n    <StyledTodoListItem>\n      <Checkbox checked={checked} onClick={() => onToggle(id)}>\n        {checked ? <MdCheckBox /> : <MdCheckBoxOutlineBlank />}\n        <Text checked={checked}>{text}</Text>\n      </Checkbox>\n      <Remove onClick={() => onRemove(id)}>\n        <MdRemoveCircleOutline />\n      </Remove>\n    </StyledTodoListItem>\n  );\n};\n\nexport default TodoListItem;\n","import TodoList from './TodoList';\n\nexport default TodoList;\n","import React from 'react';\nimport { TodoListProps } from './TodoList.type';\nimport { StyledTodoList } from './TodoList.style';\nimport TodoListItem from '@components/TodoListItem';\n\nconst TodoList: React.FC<TodoListProps> = ({ todos, onRemove, onToggle }) => {\n  return (\n    <StyledTodoList>\n      {todos.map((todo) => (\n        <TodoListItem\n          todo={todo}\n          key={todo.id}\n          onRemove={onRemove}\n          onToggle={onToggle}\n        />\n      ))}\n    </StyledTodoList>\n  );\n};\n\nexport default TodoList;\n","import Todos from './Todos';\n\nexport default Todos;\n","import React, { useState, useRef, useCallback } from 'react';\nimport TodoTemplate from '@components/TodoTemplate';\nimport TodoInsert from '@components/TodoInsert';\nimport TodoList from '@components/TodoList';\nimport { TodosProps } from './Todos.type';\n\n// eslint-disable-next-line\nconst Todos: React.FC<TodosProps> = ({}) => {\n  // eslint-disable-next-line\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      text: '리액트의 기초 알아보기',\n      checked: true,\n    },\n    {\n      id: 2,\n      text: '컴포넌트 스타일링해 보기',\n      checked: true,\n    },\n    {\n      id: 3,\n      text: '일정 관리 앱 만들어 보기',\n      checked: false,\n    },\n  ]);\n\n  const nextId = useRef(4);\n\n  const onInsert = useCallback(\n    (text) => {\n      const todo = {\n        id: nextId.current,\n        text,\n        checked: false,\n      };\n      setTodos(todos.concat(todo));\n      nextId.current += 1;\n    },\n    [todos],\n  );\n\n  const onRemove = useCallback(\n    (id) => {\n      setTodos(todos.filter((todo) => todo.id !== id));\n    },\n    [todos],\n  );\n\n  const onToggle = useCallback(\n    (id) => {\n      setTodos(\n        todos.map((todo) =>\n          todo.id === id ? { ...todo, checked: !todo.checked } : todo,\n        ),\n      );\n    },\n    [todos],\n  );\n\n  return (\n    <TodoTemplate>\n      <TodoInsert onInsert={onInsert} />\n      <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle} />\n    </TodoTemplate>\n  );\n};\n\nexport default Todos;\n","import Home from './Home';\n\nexport default Home;\n","import React from 'react';\nimport Todos from '@components/Todos';\nimport { HomeProps } from './Home.type';\n\n// eslint-disable-next-line\nconst Home: React.FC<HomeProps> = ({}) => {\n  return (\n    <>\n      <Todos />\n    </>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport About from './pages/About';\nimport Home from './pages/Home';\n\nfunction App() {\n  return (\n    <div>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/about\">About</Link>\n        </li>\n      </ul>\n      <hr />\n      <Route path=\"/\" component={Home} exact={true} />\n      <Route path=\"/about\" component={About} />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}